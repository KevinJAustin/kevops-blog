name: Deploy Static Site to GitHub Pages

on:
  # Trigger on push to main branch
  push:
    branches: [ main ]
  
  # Allow manual trigger
  workflow_dispatch:
  
  # Trigger on schedule (daily at 2 AM UTC) to catch new content
  schedule:
    - cron: '0 2 * * *'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install -g @tryghost/admin-api
          sudo apt-get update
          sudo apt-get install -y wget

      - name: Start Ghost for export
        run: |
          # Start Ghost in background
          docker-compose up -d
          
          # Wait for Ghost to be ready
          echo "Waiting for Ghost to start..."
          timeout 60 bash -c 'until curl -f http://localhost:2368; do sleep 2; done'
          
          # Give Ghost a moment to fully initialize
          sleep 10

      - name: Export static site
        run: |
          # Create static export directory
          mkdir -p static-site
          
          # Use wget to create static export
          wget \
            --recursive \
            --page-requisites \
            --html-extension \
            --convert-links \
            --restrict-file-names=windows \
            --domains localhost \
            --no-parent \
            --directory-prefix=static-site \
            --exclude-directories=ghost \
            http://localhost:2368/
          
          # Move files from subdirectory to root
          if [ -d "static-site/localhost:2368" ]; then
            mv static-site/localhost:2368/* static-site/
            rm -rf static-site/localhost:2368
          fi
          
          # Create .nojekyll file for GitHub Pages
          touch static-site/.nojekyll
          
          # Create CNAME file if custom domain is set
          if [ ! -z "${{ vars.GITHUB_PAGES_DOMAIN }}" ]; then
            echo "${{ vars.GITHUB_PAGES_DOMAIN }}" > static-site/CNAME
          fi
          
          # List exported files for debugging
          echo "Exported files:"
          ls -la static-site/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './static-site'

      - name: Stop Ghost
        if: always()
        run: docker-compose down

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4